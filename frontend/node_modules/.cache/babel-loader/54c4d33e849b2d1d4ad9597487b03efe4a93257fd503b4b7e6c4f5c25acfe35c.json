{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yared\\\\Desktop\\\\task_management_app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ListHeader from './components/ListHeader';\nimport ListItem from './components/ListItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const userEmail = \"yared@test.com\";\n  const [tasks, setTasks] = useState(null);\n  const getData = async () => {\n    try {\n      const response = await fetch(`http://localhost:4000/todos/${userEmail}`);\n      const json = await response.json();\n      setTasks(json);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  console.log(tasks);\n\n  // Sort by date\n  const sortedTasks = tasks === null || tasks === void 0 ? void 0 : tasks.sort((a, b) => new Date(a.date) - new Date(b.date));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-[rgb(233,241,249)] flex items-center justify-center mt-12\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow-md rounded-lg p-4 w-[800px] mt-12\",\n      children: [/*#__PURE__*/_jsxDEV(ListHeader, {\n        listName: 'Task Manager'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), sortedTasks ? sortedTasks.map(task => /*#__PURE__*/_jsxDEV(ListItem, {\n        task: task\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 37\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading tasks...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ldJOg5+gk08WuP7h8IqOcr/yxxI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","ListHeader","ListItem","jsxDEV","_jsxDEV","App","_s","userEmail","tasks","setTasks","getData","response","fetch","json","err","console","error","log","sortedTasks","sort","a","b","Date","date","className","children","listName","fileName","_jsxFileName","lineNumber","columnNumber","map","task","id","_c","$RefreshReg$"],"sources":["C:/Users/yared/Desktop/task_management_app/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ListHeader from './components/ListHeader';\nimport ListItem from './components/ListItem';\n\nconst App = () => {\n  const userEmail = \"yared@test.com\";\n  const [tasks, setTasks] = useState(null);\n\n  const getData = async () => {\n    try {\n      const response = await fetch(`http://localhost:4000/todos/${userEmail}`);\n      const json = await response.json();\n      setTasks(json);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  console.log(tasks);\n\n  // Sort by date\n  const sortedTasks = tasks?.sort((a, b) => new Date(a.date) - new Date(b.date));\n\n  return (\n    <div className=\"bg-[rgb(233,241,249)] flex items-center justify-center mt-12\">\n      <div className=\"bg-white shadow-md rounded-lg p-4 w-[800px] mt-12\">\n        <ListHeader listName={'Task Manager'} />\n        {sortedTasks ? (\n          sortedTasks.map((task) => <ListItem key={task.id} task={task} />)\n        ) : (\n          <p>Loading tasks...</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,SAAS,GAAG,gBAAgB;EAClC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMU,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+BL,SAAS,EAAE,CAAC;MACxE,MAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,CAAC,CAAC;MAClCJ,QAAQ,CAACI,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IACpB;EACF,CAAC;EAEDf,SAAS,CAAC,MAAM;IACdW,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;EAENK,OAAO,CAACE,GAAG,CAACT,KAAK,CAAC;;EAElB;EACA,MAAMU,WAAW,GAAGV,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEW,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACF,CAAC,CAACG,IAAI,CAAC,GAAG,IAAID,IAAI,CAACD,CAAC,CAACE,IAAI,CAAC,CAAC;EAE9E,oBACEnB,OAAA;IAAKoB,SAAS,EAAC,8DAA8D;IAAAC,QAAA,eAC3ErB,OAAA;MAAKoB,SAAS,EAAC,mDAAmD;MAAAC,QAAA,gBAChErB,OAAA,CAACH,UAAU;QAACyB,QAAQ,EAAE;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACvCZ,WAAW,GACVA,WAAW,CAACa,GAAG,CAAEC,IAAI,iBAAK5B,OAAA,CAACF,QAAQ;QAAe8B,IAAI,EAAEA;MAAK,GAApBA,IAAI,CAACC,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAAC,CAAC,gBAEjE1B,OAAA;QAAAqB,QAAA,EAAG;MAAgB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACvB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACxB,EAAA,CAnCID,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAqCT,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}