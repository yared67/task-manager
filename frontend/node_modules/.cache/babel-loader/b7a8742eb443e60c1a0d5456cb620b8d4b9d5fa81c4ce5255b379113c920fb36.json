{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yared\\\\Desktop\\\\task_management_app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport ListHeader from './components/ListHeader';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const userEmail = \"yared@test.com\";\n  const [tasks, setTasks] = useState(null);\n  const getData = async () => {\n    try {\n      const response = await fetch(`http://localhost:4000/todos/${userEmail}`);\n      const json = await response.json();\n      setTasks(json);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  useEffect(() => getData, []);\n  console.log(tasks);\n\n  //sort by date \n\n  tasks === null || tasks === void 0 ? void 0 : tasks.sort((a, b) => a.date);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" bg-[rgb(233,241,249)] flex items-center justify-center mt-12\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app bg-white shadow-md rounded-lg p-4  w-[800px] mt-12\",\n      children: /*#__PURE__*/_jsxDEV(ListHeader, {\n        listName: 'Task manager'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"AsjjuEGlGppdUWDam9mauC7L0ME=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ListHeader","useEffect","useState","jsxDEV","_jsxDEV","App","_s","userEmail","tasks","setTasks","getData","response","fetch","json","err","console","error","log","sort","a","b","date","className","children","listName","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/yared/Desktop/task_management_app/frontend/src/App.js"],"sourcesContent":["import ListHeader from './components/ListHeader'\nimport { useEffect, useState} from 'react'\n\nconst App = () => {\n  const userEmail = \"yared@test.com\"\n  const[ tasks, setTasks] = useState(null)\n\n  const getData = async () => {\n    try {\n      const response = await fetch ( `http://localhost:4000/todos/${userEmail}`)\n      const json = await response.json()\n      setTasks(json)\n    }catch (err){\n      console.error(err)\n    }\n  }\n  useEffect ( ()=> getData, [] )\n\n  console.log(tasks)\n\n  //sort by date \n\n  tasks?.sort((a,b) => a.date)\n\n\n  return (\n    <div className=\" bg-[rgb(233,241,249)] flex items-center justify-center mt-12\">\n      <div className=\"app bg-white shadow-md rounded-lg p-4  w-[800px] mt-12\">\n        <ListHeader listName={'Task manager'} />\n      </div>\n    </div>\n  );\n};\n\nexport default App\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,yBAAyB;AAChD,SAASC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,SAAS,GAAG,gBAAgB;EAClC,MAAK,CAAEC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMQ,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAG,+BAA+BL,SAAS,EAAE,CAAC;MAC1E,MAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,CAAC,CAAC;MAClCJ,QAAQ,CAACI,IAAI,CAAC;IAChB,CAAC,QAAOC,GAAG,EAAC;MACVC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IACpB;EACF,CAAC;EACDb,SAAS,CAAG,MAAKS,OAAO,EAAE,EAAG,CAAC;EAE9BK,OAAO,CAACE,GAAG,CAACT,KAAK,CAAC;;EAElB;;EAEAA,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEU,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAKD,CAAC,CAACE,IAAI,CAAC;EAG5B,oBACEjB,OAAA;IAAKkB,SAAS,EAAC,+DAA+D;IAAAC,QAAA,eAC5EnB,OAAA;MAAKkB,SAAS,EAAC,wDAAwD;MAAAC,QAAA,eACrEnB,OAAA,CAACJ,UAAU;QAACwB,QAAQ,EAAE;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtB,EAAA,CA7BID,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AA+BT,eAAeA,GAAG;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}