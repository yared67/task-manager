{"ast":null,"code":"import ListHeader from'./components/ListHeader';import{useEffect,useState}from'react';import ListItem from'./components/ListItem';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const userEmail=\"yared@test.com\";const[tasks,setTasks]=useState(null);const getData=async()=>{try{const response=await fetch(\"http://localhost:4000/todos/\".concat(userEmail));const json=await response.json();setTasks(json);}catch(err){console.error(err);}};useEffect(()=>getData,[]);console.log(tasks);//sort by date \nconst sortedTasks=tasks===null||tasks===void 0?void 0:tasks.sort((a,b)=>new Date(a.date)-new Date(b.date));return/*#__PURE__*/_jsx(\"div\",{className:\" bg-[rgb(233,241,249)] flex items-center justify-center mt-12\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white shadow-md rounded-lg p-4  w-[800px] mt-12 \",children:[/*#__PURE__*/_jsx(ListHeader,{listName:'Task manager'}),sortedTasks===null||sortedTasks===void 0?void 0:sortedTasks.map(task=>/*#__PURE__*/_jsx(ListItem,{task:task},task.id))]})});};export default App;","map":{"version":3,"names":["ListHeader","useEffect","useState","ListItem","jsx","_jsx","jsxs","_jsxs","App","userEmail","tasks","setTasks","getData","response","fetch","concat","json","err","console","error","log","sortedTasks","sort","a","b","Date","date","className","children","listName","map","task","id"],"sources":["C:/Users/yared/Desktop/task_management_app/frontend/src/App.js"],"sourcesContent":["import ListHeader from './components/ListHeader'\nimport { useEffect, useState} from 'react'\nimport ListItem from './components/ListItem'\n\nconst App = () => {\n  const userEmail = \"yared@test.com\"\n  const[ tasks, setTasks] = useState(null)\n\n  const getData = async () => {\n    try {\n      const response = await fetch (`http://localhost:4000/todos/${userEmail}`)\n      const json = await response.json()\n      setTasks(json)\n    }catch (err){\n      console.error(err)\n    }\n  }\n  useEffect ( ()=> getData, [] )\n\n  console.log(tasks)\n\n  //sort by date \n\n  const sortedTasks = tasks?.sort((a,b) => new Date (a.date) - new Date(b.date))\n\n\n  return (\n    <div className=\" bg-[rgb(233,241,249)] flex items-center justify-center mt-12\">\n      <div className=\"bg-white shadow-md rounded-lg p-4  w-[800px] mt-12 \">\n        <ListHeader listName={'Task manager'} />\n        {sortedTasks?.map((task) => <ListItem key={task.id} task={task} />)}\n      </div>\n    </div>\n  );\n};\n\nexport default App\n"],"mappings":"AAAA,MAAO,CAAAA,UAAU,KAAM,yBAAyB,CAChD,OAASC,SAAS,CAAEC,QAAQ,KAAO,OAAO,CAC1C,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,QAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE5C,KAAM,CAAAC,GAAG,CAAGA,CAAA,GAAM,CAChB,KAAM,CAAAC,SAAS,CAAG,gBAAgB,CAClC,KAAK,CAAEC,KAAK,CAAEC,QAAQ,CAAC,CAAGT,QAAQ,CAAC,IAAI,CAAC,CAExC,KAAM,CAAAU,OAAO,CAAG,KAAAA,CAAA,GAAY,CAC1B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,gCAAAC,MAAA,CAAiCN,SAAS,CAAE,CAAC,CACzE,KAAM,CAAAO,IAAI,CAAG,KAAM,CAAAH,QAAQ,CAACG,IAAI,CAAC,CAAC,CAClCL,QAAQ,CAACK,IAAI,CAAC,CAChB,CAAC,MAAOC,GAAG,CAAC,CACVC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CACpB,CACF,CAAC,CACDhB,SAAS,CAAG,IAAKW,OAAO,CAAE,EAAG,CAAC,CAE9BM,OAAO,CAACE,GAAG,CAACV,KAAK,CAAC,CAElB;AAEA,KAAM,CAAAW,WAAW,CAAGX,KAAK,SAALA,KAAK,iBAALA,KAAK,CAAEY,IAAI,CAAC,CAACC,CAAC,CAACC,CAAC,GAAK,GAAI,CAAAC,IAAI,CAAEF,CAAC,CAACG,IAAI,CAAC,CAAG,GAAI,CAAAD,IAAI,CAACD,CAAC,CAACE,IAAI,CAAC,CAAC,CAG9E,mBACErB,IAAA,QAAKsB,SAAS,CAAC,+DAA+D,CAAAC,QAAA,cAC5ErB,KAAA,QAAKoB,SAAS,CAAC,qDAAqD,CAAAC,QAAA,eAClEvB,IAAA,CAACL,UAAU,EAAC6B,QAAQ,CAAE,cAAe,CAAE,CAAC,CACvCR,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAES,GAAG,CAAEC,IAAI,eAAK1B,IAAA,CAACF,QAAQ,EAAe4B,IAAI,CAAEA,IAAK,EAApBA,IAAI,CAACC,EAAiB,CAAC,CAAC,EAChE,CAAC,CACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAxB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}